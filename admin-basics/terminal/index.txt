== Введение ==

В операционной системе Linux пользователю доступны два режима работы:
графический и текстовый. Наряду с графическим, текстовый режим --
это полнофункциональный способ управления системой с помощью интерфейса
командной строки.

Умение найти командную строку и выполнить в ней команду пригодится любому
пользователю Linux, даже если он работает исключительно в графической
среде. Дело в том, что графические интерфейсы в Linux очень многообразны,
кроме того, пользователь имеет возможность существенно поменять конкретный
вид и расположение частей интерфейса по своему вкусу. Найти общие для всех и
неизменные свойства графического интерфейса в Linux весьма непросто (если
вообще возможно). В то же время командная строка доступна всегда и всюду
выглядит практически одинаково. Поэтому очень часто в документации,
рассчитанной на широкую аудиторию и общие случаи, в пример приводятся именно
фрагменты командной строки. Нередко к командной строке апеллируют люди, к
которым обратились за советом по Linux: процитировать команду,
которая даст нужный результат, гораздо проще и лаконичнее, чем словами
описывать действия, которые нужно произвести для достижения того же эффекта в
графической среде.

== Командная строка ==

Командная строка -- способ организации интерфейса, в котором каждая
строка, введённая пользователем, -- это команда системе, которую она должна
выполнить. Термин «командная строка» происходит от способа ввода команд
в одну строку, который завершается нажатием клавиши *Ввод* (*Enter*). В
Linux этот вид интерфейса всегда был основным, а потому хорошо развитым.

Первое слово в строке -- это имя исполняемого файла --
_программы_, все остальные -- _параметры_. Программа выполняет нужные
пользователю действия и может делать это по-разному, в зависимости от
полученных параметров. Параметры бывают общими (например, имя файла,
который нужно обработать) или специфическими для конкретной программы.

Чтобы получить командную строку, пользователь должен войти в систему и
запустить программу, принимающую команды и передающую их на
выполнение -- командную оболочку (_интерпретатор командной
строки_ -- по-английски «shell»).

=====================================================
Терминал::
    Устройство последовательного ввода и вывода символьной информации,
    способное воспринимать часть символов как _управляющие_ для
    редактирования ввода, посылки _сигналов_ и т. п. Используется
    для взаимодействия пользователя и системы.
=====================================================

//application path
Вызвать командную строку можно несколькими способами. Из графической среды можно получить
командную строку при помощи _эмулятора терминала_ -- обычно, они перечислены в
главном меню в разделе *Терминал*.
В неграфическом режиме вам доступны несколько виртуальных консолей. Каждая консоль
запускается одновременным нажатием *Ctrl+Alt* и функциональной клавиши с номером этой
консоли (от *F1* до *F6*). Далее запустится командная оболочка и появится
_приглашение командной строки_. _Зарегистрировавшись_, можно работать в системе
из выбранной консоли. Переключение между консолями выполняется нажатием
*Alt+F1* -- *Alt+F6*. Переход в графический режим осуществляется при помощи
комбинации клавиш *Alt+F7*.

Умение найти командную строку и выполнить в ней команду пригодится любому
пользователю Linux, даже если он работает исключительно в графической
среде. Дело в том, что графические интерфейсы в Linux очень многообразны,
кроме того, пользователь имеет возможность существенно поменять конкретный
вид и расположение частей интерфейса по своему вкусу. Найти общие для всех и
неизменные свойства графического интерфейса в Linux весьма непросто (если
вообще возможно). В то же время командная строка доступна всегда и всюду
выглядит практически одинаково. Поэтому очень часто в документации,
рассчитанной на широкую аудиторию и общие случаи, в пример приводятся именно
фрагменты командной строки. Нередко к командной строке апеллируют люди, к
которым обратились за советом по Linux: процитировать команду,
которая даст нужный результат, гораздо проще и лаконичнее, чем словами
описывать действия, которые нужно произвести для достижения того же эффекта в
графической среде.

[NOTE]
Когда упоминается команда, которую нужно выполнить в Linux, всегда имеется в
виду команда, которую нужно ввести в командной строке.

Командная строка начинается приглашением -- это подсказка, свидетельствующая
о том, что система готова принимать команды пользователя. В процессе
выполнения команды система может вывести те или иные сообщения, а когда
выполнение завершается -- вновь выводится приглашение командной строки.
Приглашение может быть оформлено по-разному, но чаще всего оно заканчивается
символом `$`. В примерах документации этим символом условно обозначается
командная строка: всё, что следует после него и до конца строки -- это и есть
команда, которую нужно ввести. Пока не нажат *Enter*, набранную команду можно
редактировать.

=== Команда ===

Простейшая команда состоит из одного «слова», например, команда `cal`,
выводящая календарь на текущий месяц.

------------------------------------------------------
$ cal
      Март 2012
Вс Пн Вт Ср Чт Пт Сб
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29 30 31
------------------------------------------------------

==== Команда и параметры ====

------------------------------------------------------
$ cal 4 2012
      Апрель 2012
Вс Пн Вт Ср Чт Пт Сб
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30
------------------------------------------------------

Команда `cal 4 2012` состоит из двух частей -- собственно
команды `cal` и «остального». То, что следует за командой
называется _параметрами_ (или аргументами) и они вводятся для изменения
поведения команды. В большинстве случаев, первое слово считается именем
команды, а остальные -- её параметрами.

==== Команда и ключи ====

Для решения разных задач одни и те же действия необходимо выполнять
по-разному. Например, для синхронизации работ в разных точках земного шара
лучше использовать единое для всех время (по Гринвичу), а для организации
собственного рабочего дня -- местное время (с учётом сдвига по часовому поясу
и разницы зимнего и летнего времени). И то, и другое время показывает команда
`date`, только для работы по Гринвичу ей нужен дополнительный параметр `-u`
(он же `--universal`).

------------------------------------------------------
[user@localhost user]$ date
Пнд Мар 12 16:10:02 FET 2012
[user@localhost user]$ date -u
Пнд Мар 12 16:10:02 UTC 2012
------------------------------------------------------

Такого рода параметры называются _ключами_ или _модификаторами выполнения_.
Ключ принадлежит данной конкретной команде и сам по себе смысла не
имеет. Этим он отличается от других параметров (например, имён файлов, чисел),
имеющих собственный смысл, не зависящий ни от какой команды. Каждая
команда может распознавать некоторый набор ключей и соответственно изменять
своё поведение. Один и тот же ключ может определять для разных команд совершенно
разные значения.

Для формата ключей нет жёсткого стандарта, однако существуют договорённости:

* Если ключ начинается на `-`, то это _однобуквенный ключ_. За `-`,
как правило, следует один символ, чаще всего буква, обозначающая действие
или свойство, которое этот ключ придаёт команде. Так проще отличать ключи от
других параметров.

* Если ключ начинается на `--`, то он называется _полнословным ключом_. Полнословный
формат ключа начинается на два знака `--`, за которыми следует полное имя
обозначаемого этим ключом содержания.

Некоторые ключи имеют и однобуквенный, и полнословный формат,
а некоторые -- только полнословный.

Информацию о ресурсах каждой команды можно получить, используя ключ `--help`. К
примеру, получить подсказку о том, что делает команда `rm`,
можно, набрав в терминале `rm --help`.
