=== Командная строка ===

Командная строка -- это способ организации интерфейса, в котором каждая
строка, введённая пользователем, -- это команда системе, которую та должна
выполнить. Термин «командная строка» происходит от того, что команды вводятся
обычно в одну строку, которая завершается нажатием клавиши *Ввод* (*Enter*). В
Linux этот вид интерфейса всегда был основным, а потому хорошо развитым.

Первое слово в такой строке -- это, как правило, имя исполняемого файла --
_программы_, все остальные слова -- _параметры_. Программа выполняет нужные
пользователю действия, но может делать это по-разному в зависимости от
полученных параметров. Параметры могут быть общими, например имя файла,
который нужно обработать, или специфическими для этой программы
модификаторами выполнения.

Чтобы получить командную строку, пользователь должен войти в систему и
запустить программу, которая будет принимать его команды и передавать их на
выполнение -- командную оболочку (её ещё называют _интерпретатор командной
строки_, просто _оболочка_, по-английски «shell»).

Получить командную строку можно многими способами. Самый простой и
универсальный -- зарегистрироваться на одной из первых шести виртуальных
консолей: после входа в систему запустится командная оболочка и появится
_приглашение командной строки_. Не выходя из графической среды можно получить
командную строку при помощи любого _эмулятора терминала_ -- обычно, они перечислены в
главном меню в разделе *Терминал*. Для пользователей графической среды KDE
командная строка доступна также по нажатию *Alt+F2* (функция «ввести команду»).

=====================================================
Терминал::
    Устройство последовательного ввода и вывода символьной информации,
    способное воспринимать часть символов как _управляющие_ для
    редактирования ввода, посылки _сигналов_ и т. п. Используется
    для взаимодействия пользователя и системы.
=====================================================

Умение найти командную строку и выполнить в ней команду пригодится любому
пользователю Linux, даже если он работает исключительно в графической
среде. Дело в том, что графические интерфейсы в Linux очень многообразны,
кроме того, пользователь имеет возможность существенно поменять конкретный
вид и расположение частей интерфейса по своему вкусу. Найти общие для всех и
неизменные свойства графического интерфейса в Linux весьма непросто (если
вообще возможно). В то же время командная строка доступна всегда и всюду
выглядит практически одинаково. Поэтому очень часто в документации,
рассчитанной на широкую аудиторию и общие случаи, в пример приводятся именно
фрагменты командной строки. Нередко к командной строке апеллируют и люди, к
которым обратились за советом по Linux. Оно и понятно: процитировать команду,
которая даст нужный результат, гораздо проще и лаконичнее, чем словами
описывать действия, которые нужно произвести для достижения того же эффекта в
графической среде (о том, как это сделать, рассказано ниже).

=================================================
Когда упоминается команда, которую нужно выполнить в Linux, всегда имеется в
виду команда, которую нужно ввести в командной строке.
=================================================

Командная строка начинается приглашением -- это подсказка, свидетельствующая
о том, что система готова принимать команды пользователя. В процессе
выполнения команды система может вывести те или иные сообщения, а когда
выполнение завершается -- вновь выводится приглашение командной строки.
Приглашение может быть оформлено по-разному, но чаще всего оно заканчивается
символом `$`. В примерах в документации этим символом условно обозначается
командная строка: всё, что следует после него и до конца строки -- это и есть
команда, которую нужно ввести. Пока не нажат *Enter*, набранную команду можно
редактировать.

=== Команда ===

Простейшая команда состоит из одного «слова», например, команда `cal`,
выводящая календарь на текущий месяц.

------------------------------------------------------
[user@localhost user]$ cal
      Март 2012
Вс Пн Вт Ср Чт Пт Сб
 1  2  3  4  5  6  7
 8  9 10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30
------------------------------------------------------

=== Команда и параметры ===

------------------------------------------------------
[user@localhost user]$ cal 4 2012
      Апрель 2012
Вс Пн Вт Ср Чт Пт Сб
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30 31
------------------------------------------------------

Команда `cal 4 2012` состоит из двух частей -- собственно
команды `cal` и «остального». То, что следует за командой
называется _параметрами_ (или аргументами) и они вводятся для изменения
поведения команды. В большинстве случаев, первое слово считается именем
команды, а остальные -- её параметрами.

=== Команда и ключи ===

Для решения разных задач одни и те же действия необходимо выполнять слегка
по-разному. Например, для синхронизации работ в разных точках земного шара
лучше использовать единое для всех время (по Гринвичу), а для организации
собственного рабочего дня -- местное время (с учётом сдвига по часовому поясу
и разницы зимнего и летнего времени). И то, и другое время показывает команда
`date`, только для работы по Гринвичу ей нужен дополнительный параметр `-u`
(он же `--universal`).

------------------------------------------------------
[user@localhost user]$ date
Пнд Мар 12 16:10:02 FET 2012
[user@localhost user]$ date -u
Пнд Мар 12 16:10:02 UTC 2012
------------------------------------------------------

Такого рода параметры называются _ключами_ или _модификаторами выполнения.
Ключ принадлежит данной конкретной команде и сам по себе смысла не
имеет, чем и отличается от прочих параметров (например, имён файлов, чисел),
которые имеют собственный смысл, не зависящий ни от какой команды. Каждая
команда может распознавать некоторый набор ключей и соответственно изменить
своё поведение. Один и тот же ключ может значить для разных команд совершенно
разные вещи.

Для формата ключей нет жёсткого стандарта, однако существуют договорённости::

* Если параметр начинается на `-`, то это -- _однобуквенный ключ_. За `-`,
как правило, следует один символ, чаще всего -- буква, обозначающая действие
или свойство, которое этот ключ придаёт команде. Так проще отличать ключи от
других параметров.

* Если параметр начинается на `--`, то это -- _полнословный ключ_. Полнословный
формат ключа начинается на два знака `-`, за которыми следует полное имя
обозначаемой этим ключом сущности.

Некоторые ключи имеют и однобуквенный, и полнословный формат,
а некоторые -- только полнословный.

Информацию о ресурсах каждой команды можно получить, используя ключ `--help`. К
примеру, получить подсказку о том, что делает команда `rm`,
можно, набрав в терминале `rm --help`.

=== Руководство ===

Каждый объект системы Linux обязательно сопровождается
документацией, описывающей их назначение и способы использования. От пользователя
системы не требуется заучивать все возможные варианты
взаимодействия с ней. Достаточно понимать основные принципы её устройства
и уметь находить справочную информацию.

==== Экранная документация ====

Почти все системы семейства UNIX, включая систему Linux, имеют экранную
документацию (man pages). Её тексты содержат документацию по системным
командам, ресурсам, конфигурационным файлам и т. д. и могут быть выведены на
экран в процессе работы.

Для доступа к экранной документации используется команда `man` (сокращение от
manual). Каждая страница руководства посвящена какому-нибудь одному
объекту системы. Для того, чтобы посмотреть страницу руководства, нужно дать
команду `man` и объект:

К примеру, если вы хотите узнать, какие опции есть у команды `date`, вы
можете ввести команду:

----------------------------------------------------------
/home/user# man date
----------------------------------------------------------

Большинство экранной документации написано для пользователей, имеющих некоторое
представление о том, что делает данная команда. Поэтому
большинство текстов экранной документации содержит исключительно технические
детали команды без особых пояснений. Тем не менее, экранная документация
оказывается очень ценной в том случае, если вы помните название команды, но
её синтаксис просто выпал у вас из памяти.

Поиск по описаниям `man` осуществляется командой `apropos`, к примеру
`apropos date` или при помощи ввода слова, обозначающего нужное действие,
после команды `man -k` (например, `man -k copy`). Слово, характеризующее
желаемое для вас действие, можно вводить и на русском языке. При наличии
русского перевода страниц руководства `man` результаты поиска будут выведены
на запрашиваемом языке.

«Страница руководства» занимает, как правило, больше одной страницы экрана.
Для того, чтобы читать было удобнее, `man` запускает программу постраничного
просмотра текстов. Страницы перелистывают пробелом, для выхода из
режима чтения описания команд `man` необходимо нажать на клавиатуре *q*.

Другой источник информации о Linux и составляющих его программах -- справочная
подсистема `info`. Страница руководства, несмотря на обилие ссылок различного
типа, остаётся «линейным» текстом, структурированным только логически.
Документ `info` -- это настоящий гипертекст, в котором множество небольших
страниц объединены в дерево. В каждом разделе документа `info` всегда есть
оглавление, из которого можно перейти сразу к нужному подразделу, откуда
всегда можно вернуться обратно. Кроме того, info-документ можно читать и
как непрерывный текст, поэтому в каждом подразделе есть ссылки на предыдущий
и последующий подразделы. Перемещаться между страницами в `info` можно по команде
`info info`. Команда `info`, введённая без параметров, предлагает пользователю
список всех документов `info`, установленных в системе.

Документация в подавляющем большинстве случаев пишется на простом английском
языке. Традиция писать по-английски идёт от немалого вклада США в
развитие компьютерной науки вообще и Linux в частности. Кроме того, английский
становится языком международного общения во всех областях, не только в
компьютерной. Необходимость писать на языке, который будет более или менее
понятен большинству пользователей, объясняется постоянным развитием Linux.
Дело не в том, что страницу руководства нельзя перевести, а в том, что её
придётся переводить всякий раз, когда изменится описываемый ею объект!
Например, выход новой версии программного продукта сопровождается изменением
его возможностей и особенностей работы, а следовательно, и новой версией
документации.

Тем не менее, некоторые наиболее актуальные руководства всё-таки существуют
в переводе на русский язык. Наиболее свежие версии таких переводов на русский
собраны в пакете `man-pages-ru` -- достаточно установить этот пакет, и те
руководства, для которых есть перевод, `man` будет по умолчанию отображать
на русском языке.
